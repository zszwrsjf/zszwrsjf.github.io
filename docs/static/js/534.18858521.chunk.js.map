{"version":3,"file":"static/js/534.18858521.chunk.js","mappings":"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","sources":["data/blogs/BlogMaps.js","components/Template/TagBar.js","layouts/SubBlog.js","components/Blog/Pagination.js","pages/Blogs.js"],"sourcesContent":["import raw from 'raw.macro';\n\nconst blogsData = [\n  {\n    id: 1,\n    title: '简介',\n    markdown: raw('./start_blog.md'),\n    tag: 'all',\n  },\n  {\n    id: 2,\n    title: '第一次日本之行',\n    markdown: raw('./first_japan_trip.md'),\n    tag: 'travel',\n  },\n];\n\nexport default blogsData;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TagBar = () => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <section id=\"tagbar\" className={isExpanded ? 'expanded' : ''}>\n      <header className=\"list\" onClick={() => setIsExpanded(!isExpanded)}>\n        <h2>Categories</h2>\n        <span className=\"toggle-icon\">{isExpanded ? '−' : '+'}</span>\n      </header>\n      <ul className=\"tag-list\">\n        <li className=\"item\"><Link to=\"/blogs?tag=travel\" className=\"link\">Travel</Link></li>\n        <li className=\"item\"><Link to=\"/blogs?tag=food\" className=\"link\">Food</Link></li>\n        <li className=\"item\"><Link to=\"/blogs?tag=anime\" className=\"link\">Anime</Link></li>\n        <li className=\"item\"><Link to=\"/blogs?tag=reflection\" className=\"link\">Reflection</Link></li>\n        <li className=\"item\"><Link to=\"/blogs?tag=coding\" className=\"link\">Coding</Link></li>\n      </ul>\n    </section>\n  );\n};\n\nexport default TagBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport Analytics from '../components/Template/Analytics';\nimport Navigation from '../components/Template/Navigation';\nimport TagBar from '../components/Template/TagBar';\nimport ScrollToTop from '../components/Template/ScrollToTop';\n\nconst SubBlog = (props) => (\n  <HelmetProvider>\n    <Analytics />\n    <ScrollToTop />\n    <Helmet titleTemplate=\"%s | Zhang Song\" defaultTitle=\"Zhang Song\" defer={false}>\n      {props.title && <title>{props.title}</title>}\n      <meta name=\"description\" content={props.description} />\n    </Helmet>\n    <div id=\"wrapper\">\n      <Navigation />\n      <div className=\"mobile-tagbar\">\n        <TagBar />\n      </div>\n      <div id=\"SubBlog\">\n        {props.children}\n      </div>\n      <TagBar />\n    </div>\n  </HelmetProvider>\n);\n\nSubBlog.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nSubBlog.defaultProps = {\n  children: null,\n  title: null,\n  description: \"Zhang Song's personal website.\",\n};\n\nexport default SubBlog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination, Stack } from '@mui/material';\n\nconst CustomPagination = ({\n  count,\n  page,\n  onChange,\n  siblingCount = 0,\n  variant = 'outlined',\n  shape = 'rounded',\n}) => (\n  <Stack spacing={2} alignItems=\"center\">\n    <Pagination\n      count={count}\n      page={page}\n      onChange={onChange}\n      variant={variant}\n      shape={shape}\n      siblingCount={siblingCount}\n    />\n  </Stack>\n);\n\nCustomPagination.propTypes = {\n  count: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  siblingCount: PropTypes.number,\n  variant: PropTypes.string,\n  shape: PropTypes.string,\n};\n\nCustomPagination.defaultProps = {\n  variant: 'outlined',\n  shape: 'rounded',\n  siblingCount: 0,\n};\n\nexport default CustomPagination;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport ReactMarkdown from 'react-markdown';\nimport SubBlog from '../layouts/SubBlog';\nimport blogsData from '../data/blogs/BlogMaps';\nimport CustomPagination from '../components/Blog/Pagination';\n\nconst Blogs = () => {\n  const [paginatedBlogs, setPaginatedBlogs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const location = useLocation();\n  const LinkRenderer = ({ ...children }) => <Link {...children} />;\n\n  const pageCount = 10;\n\n  const [allBlogs, setAllBlogs] = useState([]);\n\n  useEffect(() => {\n    const queryParams = queryString.parse(location.search);\n    if (queryParams.tag) {\n      const filtered = blogsData.filter((blog) => (blog.tag === queryParams.tag || blog.tag === 'all'));\n      setAllBlogs(filtered);\n    } else {\n      setAllBlogs(blogsData);\n    }\n  }, [location.search]);\n\n  useEffect(() => {\n    const startIndex = (currentPage - 1) * pageCount;\n    const endIndex = startIndex + pageCount;\n    setPaginatedBlogs(allBlogs.slice(startIndex, endIndex));\n  }, [currentPage, allBlogs]);\n\n  const totalPages = Math.ceil(allBlogs.length / pageCount);\n\n  return (\n    <SubBlog title=\"Blogs\">\n      <div className=\"blog-container\">\n        <h1 className=\"blog-heading\">Blogs</h1>\n        <CustomPagination\n          count={totalPages}\n          page={currentPage}\n          onChange={(event, value) => setCurrentPage(value)}\n        />\n        {paginatedBlogs.map((blog) => (\n          <div className=\"blog-preview\" key={blog.id}>\n            <div className=\"mask\">\n              <a href={`/blogs/${blog.id}`}>\n                <span>查看全文</span>\n              </a>\n            </div>\n            <div>\n              <h2><a href={`/blogs/${blog.id}`}>{blog.title}</a></h2>\n            </div>\n            <ReactMarkdown\n              renderers={{\n                Link: LinkRenderer,\n              }}\n            >\n              {blog.markdown}\n            </ReactMarkdown>\n          </div>\n        ))}\n      </div>\n    </SubBlog>\n  );\n};\n\nexport default Blogs;\n"],"names":["id","title","markdown","tag","TagBar","isExpanded","setIsExpanded","useState","_jsxs","className","children","onClick","_jsx","Link","to","SubBlog","props","HelmetProvider","Analytics","ScrollToTop","Helmet","titleTemplate","defaultTitle","defer","name","content","description","Navigation","defaultProps","CustomPagination","_ref","count","page","onChange","siblingCount","variant","shape","Stack","spacing","alignItems","Pagination","Blogs","paginatedBlogs","setPaginatedBlogs","currentPage","setCurrentPage","location","useLocation","LinkRenderer","Object","assign","_objectDestructuringEmpty","_objectSpread","allBlogs","setAllBlogs","useEffect","queryParams","queryString","parse","search","filtered","blogsData","filter","blog","startIndex","endIndex","slice","totalPages","Math","ceil","length","event","value","map","href","concat","ReactMarkdown","renderers"],"sourceRoot":""}